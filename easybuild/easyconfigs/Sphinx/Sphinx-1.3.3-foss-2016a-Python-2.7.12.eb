# Built with EasyBuild version 2.8.2 on 2016-09-02_11-16-59
easyblock = 'Bundle'

name = 'Sphinx'
version = '1.3.3'

homepage = 'http://sphinx.pocoo.org/'
description = """Sphinx is a tool that makes it easy to create intelligent and beautiful documentation.
 It was originally created for the new Python documentation, and it has excellent facilities for the 
 documentation of Python projects, but C/C++ is already supported as well, and it is planned to add 
 special support for other languages as well."""

toolchain = {'name': 'foss', 'version': '2016a'}

# this is a bundle of Python packages
exts_defaultclass = 'PythonPackage'

pyver = '2.7.12'
pyshortver = '.'.join(pyver.split('.')[0:2])
versionsuffix = '-Python-%s' % pyver

dependencies = [
    ('Python', pyver, '-fh1'),
]

skipsteps = ['tests']

exts_list = [
    ('Docutils', '0.12', {
        'source_tmpl': 'docutils-%(version)s.tar.gz',
        'source_urls': [('http://sourceforge.net/projects/docutils/files/docutils/%(version)s/', 'download')],
    }),
    ('Jinja2', '2.8', {
        'source_urls': ['https://pypi.python.org/packages/source/J/Jinja2/'],
    }),
    ('Pygments', '2.0.2', {
        'source_urls': ['https://pypi.python.org/packages/source/P/Pygments'],
    }),
    ('snowballstemmer', '1.2.1', {
        'source_urls': ['https://pypi.python.org/packages/source/s/snowballstemmer/'],
    }),
    ('Babel', '2.2.0', {
        'source_urls': ['https://pypi.python.org/packages/source/B/Babel/'],
    }),
    ('alabaster', '0.7.7', {
        'source_urls': ['https://pypi.python.org/packages/source/a/alabaster/'],
    }),
    (name, version, {
        'source_urls': ['https://pypi.python.org/packages/source/S/Sphinx/'],
    }),
    # sphinx_rtd_theme depends on Sphinx, and should be there to make the tests work
    ('sphinx_rtd_theme', '0.1.9', {
        'source_urls': ['https://pypi.python.org/packages/source/s/sphinx_rtd_theme/'],
    }),
]

# Sphinx unit tests *after* installing extensions
#postinstallcmds = [' && '.join([
#    "cd %(builddir)s/%(name)s/%(name)s-%(version)s/",
#    "PYTHONPATH=%%(installdir)s/lib/python%s/site-packages/:$PYTHONPATH make test" % pyshortver,
#])]

# specify that Bundle easyblock should run a full sanity check, rather than just trying to load the module
full_sanity_check = True

sanity_check_paths = {
    'files': ['bin/sphinx-%s' % x for x in ['apidoc', 'autogen', 'build', 'quickstart']],
    'dirs': ['lib/python%s/site-packages' % pyshortver],
}

modextrapaths = {'PYTHONPATH': ['lib/python%s/site-packages' % pyshortver]}

moduleclass = 'vis'

# Build statistics
buildstats = [{
    "build_time": 62.66,
    "command_line": ['--buildpath=/app/easybuild/build', '--group-writable-installdir', '--installpath-modules=/app/easybuild/modules', '--installpath-software=/app/easybuild/software', '--logfile-format=/app/easybuild/logs,easybuild-%(name)s-%(version)s-%(date)s.%(time)s.log', '--modules-tool=Lmod', '--repositorypath=/app/easybuild/ebfiles_repo', '--robot-paths=:/app/easybuild/fh_easyconfigs', '--sourcepath=/app/easybuild/sources', '--umask=002', 'Sphinx-1.3.3-foss-2016a-Python-2.7.12.eb'],
    "core_count": 8,
    "cpu_model": "Common KVM processor",
    "cpu_speed": 2899.998,
    "cpu_vendor": "Intel",
    "easybuild-easyblocks_version": "2.8.2",
    "easybuild-framework_version": "2.8.2",
    "gcc_version": "Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/app/easybuild/software/GCCcore/4.9.3/libexec/gcc/x86_64-unknown-linux-gnu/4.9.3/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ../configure --enable-languages=c,c++,fortran --enable-lto --enable-checking=release --disable-multilib --enable-shared=yes --enable-static=yes --enable-threads=posix --enable-gold=default --enable-plugins --enable-ld --with-plugin-ld=ld.gold --enable-bootstrap --prefix=/app/easybuild/software/GCCcore/4.9.3 --with-local-prefix=/app/easybuild/software/GCCcore/4.9.3; Thread model: posix; gcc version 4.9.3 (GCC) ; ",
    "glibc_version": "2.19",
    "hostname": "rhino-d",
    "install_size": 39736001,
    "modules_tool": ('Lmod', '/app/Lmod/lmod/6.4.5/libexec/lmod', '6.4.5'),
    "os_name": "ubuntu",
    "os_type": "Linux",
    "os_version": "14.04",
    "platform_name": "x86_64-unknown-linux",
    "python_version": "2.7.6 (default, Jun 22 2015, 17:58:13) ; [GCC 4.8.2]",
    "system_gcc_path": "/app/easybuild/software/GCCcore/4.9.3/bin/gcc",
    "system_python_path": "/app/easybuild/software/Python/2.7.12-foss-2016a-fh1/bin/python",
    "timestamp": 1472840219,
    "total_memory": 32048,
}]
