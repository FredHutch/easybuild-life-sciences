easyblock = 'CMakeMake'

name = 'dorado'
version = '0.3.4'
versionsuffix = '-CUDA-%(cudaver)s'

homepage = 'https://github.com/nanoporetech/dorado'
description = """Dorado is a high-performance, easy-to-use, open source basecaller for Oxford Nanopore reads."""

toolchain = {'name': 'foss', 'version': '2022a'}
toolchainopts = {'usempi': True}

source_urls = ['https://github.com/nanoporetech/dorado/archive/']
sources = [{
    'git_config': {
        'url': 'https://github.com/nanoporetech',
        'repo_name': name,
        'tag': 'v%(version)s',
        'recursive': True,
    },
    'filename': SOURCE_TAR_GZ,
}]
checksums = [None]

builddependencies = [
    ('binutils', '2.38'),
    ('CMake', '3.23.1'),
]

dependencies = [
    ('CUDA', '11.7.0', '', SYSTEM),
    #('OpenSSL', '1.1', '', SYSTEM),
    ('PyTorch', '1.12.1', '-CUDA-%(cudaver)s'),
    ('HDF5', '1.12.2'),
    ('zstd', '1.5.2'),
    ('HTSlib', '1.15.1'),
    ('kineto', '0.4.0'),
    ('libaec', '1.0.6'),
]

# don't link to OpenSSL static libraries
# fix for CMake Error "missing: OPENSSL_CRYPTO_LIBRARY" (if only shared OpenSSL libraries are available)
preconfigopts = "sed -i '/OPENSSL_USE_STATIC_LIBS TRUE/d' ../dorado/cmake/OpenSSL.cmake && "
preconfigopts += "export OPENSSL_ROOT_DIR=$EBROOTOPENSSL && "
# link in the ssl and crypto libs
preconfigopts += "sed -i 's/OpenSSL::SSL/ssl\\n    crypto/g' ../dorado/CMakeLists.txt && "

# don't use vendored HTSlib, use provided HTSlib dependency
preconfigopts += "rm -r ../dorado/dorado/3rdparty/htslib/ && "
preconfigopts += "sed -i '/add_dependencies.*htslib_project/d' ../dorado/CMakeLists.txt && "
preconfigopts += "sed -i '/Htslib.cmake/d' ../dorado/CMakeLists.txt && "
# link with -lhts, not -lhtslib
preconfigopts += "sed -i 's/htslib/hts/g' ../dorado/CMakeLists.txt && "

# requested_bytes not in PyTorch 1.13.1
preconfigopts += "sed -i 's/requested_bytes/reserved_bytes/g' ../dorado/dorado/nn/CudaCRFModel.cpp && "

configopts = "-DDORADO_INSTALL_PATH=%(installdir)s "
configopts += "-DCUDA_TOOLKIT_ROOT_DIR=$EBROOTCUDA -DCMAKE_CUDA_COMPILER=$EBROOTCUDA/bin/nvcc "
configopts += "-DDORADO_LIBTORCH_DIR=$EBROOTPYTORCH/lib -DHTSLIB_LIBRARIES=hts "
# add -pthread flag (in addition to -lpthread) to avoid linking error:
# in function `_GLOBAL__sub_I_mutex.cc': mutex.cc:(.text.startup+0x17): undefined reference to `pthread_atfork'
configopts += '-DCMAKE_C_FLAGS="$CFLAGS -pthread" '

sanity_check_paths = {
    'files': ['bin/dorado'],
    'dirs': [],
}

sanity_check_commands = ["dorado basecaller --help"]

moduleclass = 'bio'
